/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id("au.com.memetics.java-conventions")
    id("org.springframework.boot") version "3.1.0"
    id("io.spring.dependency-management") version "1.1.0"
    id("org.springdoc.openapi-gradle-plugin") version "1.6.0"
    kotlin("plugin.spring") version "1.8.21"
    kotlin("plugin.jpa") version "1.8.21"
}

description = "memetics-backend"

repositories {
    // Use the plugin portal to apply community plugins in convention plugins.
    gradlePluginPortal()
    mavenCentral()

    // for Spring Social
    maven { url = uri("https://repo.spring.io/libs-snapshot") }
    maven { url = uri("https://repo.spring.io/release") }
    maven { url = uri("https://repo.spring.io/milestone") }
}

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.boot:spring-boot-starter-web")
    //    testImplementation("org.springframework.security:spring-security-test:5.1.2.RELEASE")

    implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.liquibase:liquibase-core")

    // db
    runtimeOnly("com.h2database:h2")
    runtimeOnly("org.postgresql:postgresql")

    // mapstruct/lombok (maybe replace with immutables or just use Kotlin)
    compileOnly("org.mapstruct:mapstruct:1.5.5.Final")
    annotationProcessor("org.mapstruct:mapstruct-processor:1.5.5.Final")
    compileOnly("org.projectlombok:lombok")
    annotationProcessor("org.projectlombok:lombok")

    // https://stackoverflow.com/questions/47351968/how-to-make-githubs-immutables-work-in-intellij-gradle/59917737#59917737
    compileOnly("org.immutables:value:2.5.5") // for annotations
    compileOnly("org.immutables:builder:2.5.5") // for annotations
    compileOnly("org.immutables:gson:2.5.5") // for annotations

    implementation("org.springdoc:springdoc-openapi-ui:1.7.0")
    implementation("commons-io:commons-io:2.12.0")

    implementation("javax.servlet:javax.servlet-api:3.1.0")
    implementation("org.hibernate.validator:hibernate-validator")

    // testing
    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.security:spring-security-test")

    // social
    implementation("com.afrozaar.wordpress:wp-api-v2-client-java:4.8.3")

    implementation("org.springframework.social:spring-social-core:2.0.0.M4")
    implementation("org.springframework.social:spring-social-config:2.0.0.M4")
    implementation("org.springframework.social:spring-social-web:2.0.0.M4")
    implementation("org.springframework.social:spring-social-security:2.0.0.M4")
    implementation("org.springframework.social:spring-social-twitter:2.0.0.M4")
    implementation("org.springframework.social:spring-social-facebook:3.0.0.M1")
    implementation("org.springframework.social:spring-social-test:1.0.3.RELEASE")

    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-csv")

//    api("jstl:jstl:1.2")
//    api("javax.servlet.jsp:javax.servlet.jsp-api:2.3.3")
//    api("org.infinispan:infinispan-spring4-embedded:9.4.5.Final")
//    api("com.querydsl:querydsl-apt:4.2.1")
    implementation("org.scribe:scribe:1.3.7")
//    api("xerces:xercesImpl:2.12.0")
//    api("org.apache.commons:commons-lang3:3.8.1")
//    api("commons-collections:commons-collections:3.2.2")
//    api("javax.xml.bind:jaxb-api:2.3.1")
//    testImplementation("org.springframework.boot:spring-boot-starter-test:2.1.1.RELEASE")
//    testImplementation("com.github.springtestdbunit:spring-test-dbunit:1.3.0")
//    testImplementation("org.dbunit:dbunit:2.6.0")
//    testImplementation("io.rest-assured:spring-mock-mvc:3.2.0")

//    testImplementation("com.xebialabs.restito:restito:0.9.3")
//    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.3.2")
//    testImplementation("org.junit.vintage:junit-vintage-engine:5.3.2")
//    testImplementation("org.easytesting:fest-assert-core:2.0M10")
//    compileOnly("javax.servlet:javax.servlet-api:4.0.1")
}

java {
    withSourcesJar()
}

tasks.withType<Test> {
    useJUnitPlatform()
}
